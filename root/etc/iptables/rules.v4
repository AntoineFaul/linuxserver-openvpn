
# You can delete all of these comments, if you like.

*filter
# You drop everything by default.

:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT DROP [0:0]


# Some local processes need to hear from other ones.

-A INPUT -i lo -j ACCEPT


# If you are running a server on port N, and have enabled forwarding in your VPN account, you must allow inbound traffic on the VPN. You may also want to limit access to a particular IP address (a.b.c.d). There can be multiple rules, one for each permitted port and source address.

#-A INPUT -i tun0 -s a.b.c.d --dport N -j ACCEPT
-A INPUT -i tun0 -j ACCEPT


# You may need to allow traffic from local DHCP servers. If using Wi-Fi, use “wlan0” instead of “eth0”. This isn’t needed if your router provides persistent leases.

-A INPUT -s 192.168.0.0/16,172.16.0.0/24,10.0.0.0/8 -j ACCEPT


# Then you allow related/established traffic, and drop everything else, without acknowledgement to peers.

-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -j DROP


# Your device isn’t a router, so don’t allow forwarding. In any case, you’d also need to allow that using sysctl.

-A FORWARD -j DROP


# Some local processes need to talk to other ones.

-A OUTPUT -o lo -j ACCEPT


# You need rule(s) to allow connecting to VPN server(s). You must use IP addresses. If also using Wi-Fi, add another rule, with “-o wlan0”, instead of “-o eth0”. There can be multiple rules, one for each server.

#-A OUTPUT -o eth0 -d SPECIFIC_ALLOWED_OUTBOUND -j ACCEPT


# You need a rule to allow outbound traffic through the VPN tunnel.

-A OUTPUT -o tun0 -j ACCEPT


# You may want rule(s) to allow LAN access. There can be multiple rules, one for each LAN that you use. If also using Wi-Fi, add another rule, with “-o wlan0”, instead of “-o eth0”.

-A OUTPUT -o eth0 -d 192.168.0.0/16,172.16.0.0/12,10.0.0.0/8 -j ACCEPT


# Allow outgoing traffic to local DHCP servers. If using Wi-Fi, use “wlan0” instead of “eth0”. This isn’t needed if your router provides persistent leases.

-A OUTPUT -o eth0 -d 255.255.255.255 -j ACCEPT


# Then you allow related/established traffic, and drop everything else, without acknowledgement to peers.

-A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A OUTPUT -j DROP


COMMIT

