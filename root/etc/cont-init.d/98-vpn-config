#!/usr/bin/with-contenv bash

# Determine if setup is needed
if [ ! -f /usr/sbin/openvpn ] && \
[ -f /usr/bin/apt ]; then
  ## Ubuntu
  apt-get update
  apt-get install --no-install-recommends -y \
    iptables \
    openvpn
fi
if [ ! -f /usr/sbin/openvpn ] && \
[ -f /sbin/apk ]; then
  # Alpine
  apk add --no-cache \
    iptables \
    openvpn \
fi

iptables-restore < /etc/iptables/rules.v4


PROTO=$(sed -n '/proto /' /openvpn.conf | awk -F' ' '{print $2}')
REMOTES=$(sed -n '/remote /' /openvpn.conf)

for remote in $remote; do
  EXCLUSION_HOST=$(echo $remote | awk -F:' ' '{print $2}')
  EXCLUSION_PORT=$(echo $remote | awk -F:' ' '{print $3}')
  EXCLUSION_PROT=$(echo $remote | awk -F:' ' '{print $4}')
  if [[ -z $EXCLUSION_PROT ]]; then
    EXCLUSION_PROT=$PROTO
  fi
  if expr "$ip" : '[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*$' >/dev/null; then
  else
    EXCLUSION_HOST=$(getent hosts $EXCLUSION_HOST | awk '{print $1}')
  fi
  echo "iptables -A OUTPUT -o eth0 -d $EXCLUSION_HOST -dport $EXCLUSION_PORT -p $EXCLUSION_PROT -j ACCEPT"
  iptables -A OUTPUT -o eth0 -d $EXCLUSION_HOST -dport $EXCLUSION_PORT -p $EXCLUSION_PROT -j ACCEPT
done
